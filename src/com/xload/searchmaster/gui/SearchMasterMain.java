/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SearchMasterMain.java
 *
 * Created on 20/02/2010, 12:28:01 AM
 */

package com.xload.searchmaster.gui;

import com.xload.searchmaster.Facade;
import com.xload.generic.WeightedItem;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.util.ArrayList;
import java.util.Hashtable;
import javax.swing.DefaultListModel;
import javax.swing.SwingWorker;

/**
 *
 * @author madrax
 */
public class SearchMasterMain extends javax.swing.JFrame {

    /** Creates new form SearchMasterMain */
    public SearchMasterMain() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jTabbedPane1 = new javax.swing.JTabbedPane();
    jPanel2 = new javax.swing.JPanel();
    jPanel3 = new javax.swing.JPanel();
    jPanel1 = new javax.swing.JPanel();
    jLabel1 = new javax.swing.JLabel();
    btnGenerate = new javax.swing.JButton();
    tSeedKeyword = new javax.swing.JTextField();
    jLabel2 = new javax.swing.JLabel();
    btnWeight = new javax.swing.JButton();
    jScrollPane2 = new javax.swing.JScrollPane();
    tblLSIKeywords = new javax.swing.JTable();
    prgBar = new javax.swing.JProgressBar();
    menuBar = new javax.swing.JMenuBar();
    fileMenu = new javax.swing.JMenu();
    openMenuItem = new javax.swing.JMenuItem();
    saveMenuItem = new javax.swing.JMenuItem();
    saveAsMenuItem = new javax.swing.JMenuItem();
    exitMenuItem = new javax.swing.JMenuItem();
    editMenu = new javax.swing.JMenu();
    cutMenuItem = new javax.swing.JMenuItem();
    copyMenuItem = new javax.swing.JMenuItem();
    pasteMenuItem = new javax.swing.JMenuItem();
    deleteMenuItem = new javax.swing.JMenuItem();
    helpMenu = new javax.swing.JMenu();
    contentsMenuItem = new javax.swing.JMenuItem();
    aboutMenuItem = new javax.swing.JMenuItem();

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
    jPanel2.setLayout(jPanel2Layout);
    jPanel2Layout.setHorizontalGroup(
      jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 921, Short.MAX_VALUE)
    );
    jPanel2Layout.setVerticalGroup(
      jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 478, Short.MAX_VALUE)
    );

    jTabbedPane1.addTab("Stats Manager", jPanel2);

    javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
    jPanel3.setLayout(jPanel3Layout);
    jPanel3Layout.setHorizontalGroup(
      jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 921, Short.MAX_VALUE)
    );
    jPanel3Layout.setVerticalGroup(
      jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 478, Short.MAX_VALUE)
    );

    jTabbedPane1.addTab("Phrase Manager", jPanel3);

    jLabel1.setText("Seed Keyword");

    btnGenerate.setText("Generate!");
    btnGenerate.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnGenerateActionPerformed(evt);
      }
    });

    jLabel2.setText("LSI Keywords");

    btnWeight.setText("Exact Phrase Count");
    btnWeight.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnWeightActionPerformed(evt);
      }
    });

    tblLSIKeywords.setModel(keywordsLSITable);
    tblLSIKeywords.setColumnSelectionAllowed(true);
    jScrollPane2.setViewportView(tblLSIKeywords);
    tblLSIKeywords.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);

    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
      jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel1Layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(jLabel1)
          .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
          .addComponent(prgBar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 452, Short.MAX_VALUE)
          .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
            .addGroup(jPanel1Layout.createSequentialGroup()
              .addComponent(tSeedKeyword, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
              .addComponent(btnGenerate)
              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
              .addComponent(btnWeight))
            .addComponent(jScrollPane2)))
        .addGap(349, 349, 349))
    );
    jPanel1Layout.setVerticalGroup(
      jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel1Layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel1)
          .addComponent(btnGenerate)
          .addComponent(tSeedKeyword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(btnWeight))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(prgBar, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
        .addContainerGap())
    );

    jTabbedPane1.addTab("LSI Generator", jPanel1);

    fileMenu.setText("File");

    openMenuItem.setText("Open");
    fileMenu.add(openMenuItem);

    saveMenuItem.setText("Save");
    fileMenu.add(saveMenuItem);

    saveAsMenuItem.setText("Save As ...");
    fileMenu.add(saveAsMenuItem);

    exitMenuItem.setText("Exit");
    exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        exitMenuItemActionPerformed(evt);
      }
    });
    fileMenu.add(exitMenuItem);

    menuBar.add(fileMenu);

    editMenu.setText("Edit");

    cutMenuItem.setText("Cut");
    editMenu.add(cutMenuItem);

    copyMenuItem.setText("Copy");
    editMenu.add(copyMenuItem);

    pasteMenuItem.setText("Paste");
    editMenu.add(pasteMenuItem);

    deleteMenuItem.setText("Delete");
    editMenu.add(deleteMenuItem);

    menuBar.add(editMenu);

    helpMenu.setText("Help");

    contentsMenuItem.setText("Contents");
    helpMenu.add(contentsMenuItem);

    aboutMenuItem.setText("About");
    helpMenu.add(aboutMenuItem);

    menuBar.add(helpMenu);

    setJMenuBar(menuBar);

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(jTabbedPane1)
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 506, Short.MAX_VALUE)
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void btnGenerateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerateActionPerformed
      //ArrayList<String> results =  Facade.generateLSI(tSeedKeyword.getText());
      class Task extends SwingWorker<Void, Void>{
        @Override
        public Void doInBackground() {
          updateProgress(5, "Querying Google API");
          try {
            ArrayList<String> keywordList = new ArrayList<String>();
            String response = Facade.SearchGoogleAPIByKeyword(tSeedKeyword.getText());
            updateProgress(5, "Getting Candidates");
            ArrayList<String> canidatesURL = Facade.getCandidatesFromResponse(response);
            Hashtable hashResults = new Hashtable();
            for (String canidate : canidatesURL) {
              int prg = prgBar.getValue()+5;
              updateProgress(prg, "Hashing "+canidate);
              hashResults = Facade.parseURL(canidate, hashResults);
            }
            updateProgress(90, "Adding LSI Keywords");
            keywordList = Facade.addLSIKeywords(keywordList, hashResults, tSeedKeyword.getText());
            keywordsLSIList.clear();
            ArrayList<String> results2 = (ArrayList<String>) keywordList.clone();
            for (String s : keywordList) {
              //keywordsLSIList.addElement();
              for (String t : results2) {
                Object[] row = {false, tSeedKeyword.getText()+" "+s+" "+t, 0};
                keywordsLSITable.addRow(row);
              }
            }
            updateProgress(100, "LSI Generating Done");
          }
          catch (Exception ex) { }
          return null;
        }
        /*
         * Executed in event dispatching thread
         */
        @Override
        public void done() { }
        private void updateProgress(int i, String string) {
            prgBar.setValue(i);
            prgBar.setString(string+" ("+i+"%)");
            prgBar.setStringPainted(true);
        }
      }
      Task task = new Task();
      task.execute();
    }//GEN-LAST:event_btnGenerateActionPerformed
    
    private void btnWeightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnWeightActionPerformed
      ArrayList<String> results =  new ArrayList<String>();
      for (int i=0; i< keywordsLSITable.getRowCount(); i++) {
        Boolean b = (Boolean) keywordsLSITable.getValueAt(i, 0);
        if (b) {
          String s = (String) keywordsLSITable.getValueAt(i, 1);
          WeightedItem weightedResult = Facade.getResultsPerKeyword(s);
          keywordsLSITable.setValueAt(weightedResult, i, 2);
        }
      }
    }//GEN-LAST:event_btnWeightActionPerformed

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JMenuItem aboutMenuItem;
  private javax.swing.JButton btnGenerate;
  private javax.swing.JButton btnWeight;
  private javax.swing.JMenuItem contentsMenuItem;
  private javax.swing.JMenuItem copyMenuItem;
  private javax.swing.JMenuItem cutMenuItem;
  private javax.swing.JMenuItem deleteMenuItem;
  private javax.swing.JMenu editMenu;
  private javax.swing.JMenuItem exitMenuItem;
  private javax.swing.JMenu fileMenu;
  private javax.swing.JMenu helpMenu;
  private javax.swing.JLabel jLabel1;
  private javax.swing.JLabel jLabel2;
  private javax.swing.JPanel jPanel1;
  private javax.swing.JPanel jPanel2;
  private javax.swing.JPanel jPanel3;
  private javax.swing.JScrollPane jScrollPane2;
  private javax.swing.JTabbedPane jTabbedPane1;
  private javax.swing.JMenuBar menuBar;
  private javax.swing.JMenuItem openMenuItem;
  private javax.swing.JMenuItem pasteMenuItem;
  private javax.swing.JProgressBar prgBar;
  private javax.swing.JMenuItem saveAsMenuItem;
  private javax.swing.JMenuItem saveMenuItem;
  private javax.swing.JTextField tSeedKeyword;
  private javax.swing.JTable tblLSIKeywords;
  // End of variables declaration//GEN-END:variables
  private DefaultListModel keywordsLSIList =  new DefaultListModel();
  private Object[][] rowsLSITable = null;
  private String[] headerLSITable = new String [] {"Check", "Keyword", "Search Volume","Competition","Count"};
  private lsiTableModel keywordsLSITable = new lsiTableModel(rowsLSITable,headerLSITable);

  
}
